local top_magnet_location = vmath.vector3()
local bottom_magnet_location = vmath.vector3()


go.property("health", 5)


function init(self)
	sound.play("/sounds#sound")
	sound.play("/sounds#hellSound")
	sound.set_gain("/sounds#hellSound", 0)
	self.is_game_started = false
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	msg.post(".", "acquire_input_focus")
	self.vel = vmath.vector3()
	self.blue_polarity = true
	self.attraction = 40.0
	top_magnet_location = go.get_position("Magnet1")
	bottom_magnet_location = go.get_position("Magnet2")
	self.sound_speed = 1.0
	self.score = 0
	self.is_hell = false
	msg.post("/ScoreUI#ScoreUI", "update_health", { health = self.health })
end

function on_message(self, message_id, message, sender)
	-- check for the message
	if message_id == hash("trigger_response") then
		if message.enter then
			if message.other_group == hash("obs") then
				-- take action for entry
				
				self.health = self.health - 1
				msg.post("/ScoreUI#ScoreUI", "update_health", { health = self.health })
				go.delete(message.other_id)

				sound.play("/sounds#damage")

				if self.health == 0 then
					local highscore = sys.get_save_file("sys_save_load", "highscore")

					local curr_highscore = sys.load(highscore).highscore or 0 
					
					local filename = sys.get_save_file("sys_save_load", "score")
					sys.save(filename, { score = self.score })

					if self.score > curr_highscore then
						sys.save(highscore, { highscore = self.score })
					end
					msg.post("loader:/go#loader", "game_over")
				end
			end

			if message.other_group == hash("portal") then
				sound.play("/sounds#teleport")
				self.is_hell = not self.is_hell
				go.set("/Magnet1#Magnet", "is_hell", self.is_hell)
				go.set("/Magnet2#Magnet", "is_hell", self.is_hell)

				
				if self.is_hell then
					sound.set_gain("/sounds#sound", 0)
					sound.set_gain("/sounds#hellSound", 1)
					if self.blue_polarity then
						msg.post("#sprite", "play_animation", { id = hash("HellMan_Blue")})
					else 
						msg.post("#sprite", "play_animation", { id = hash("HellMan_Red")})
					end
				else 
					go.set("/Magnet1#Magnet", "blue_polarity", false)
					go.set("/Magnet2#Magnet", "blue_polarity", true)
					
					sound.set_gain("/sounds#sound", 1)
					sound.set_gain("/sounds#hellSound", 0)
					if self.blue_polarity then
						msg.post("#sprite", "play_animation", { id = hash("MEN")})
					else 
						msg.post("#sprite", "play_animation", { id = hash("MEN 2")})
					end
				end
			end
		end	
	end
end

function update(self, dt)
	if not self.is_game_started then
		return
	end
	
	
	self.sound_speed = self.sound_speed + (dt / 500.0) 
	go.set("/sounds#sound", "speed", self.sound_speed)
	go.set("/sounds#hellSound", "speed", self.sound_speed)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
	local pos = go.get_position() -- <3>
	pos = pos + self.vel * dt -- <4>
	if pos.y >= 656.0 then
			pos.y = 656.0
		else if pos.y <= 64 then
			pos.y = 64
		end 
	end
	go.set_position(pos) -- <5>

	local distance_to_top_magnet = (math.abs(pos.y - top_magnet_location.y) - 64) / 592
	local distance_to_bottom_magnet = (math.abs(pos.y - bottom_magnet_location.y) - 64) / 592
	--- print(distance_to_top_magnet, distance_to_bottom_magnet)
	local top_polarity = go.get("Magnet1#Magnet", "blue_polarity")
	local bottom_polarity = go.get("Magnet2#Magnet", "blue_polarity")

	if top_polarity == not self.blue_polarity then
		self.vel.y = self.attraction * (1 + distance_to_bottom_magnet * 30.0) 
	else
		self.vel.y = - self.attraction * (1 + distance_to_top_magnet * 30.0)
	end
end

function on_input(self, action_id, action)
	if self.is_hell then 
		return
	end
	if action_id == hash("space") and action.pressed then
		if not self.is_game_started then
			msg.post("/spawnner#Spawner", "start_spawning")
			timer.delay(0.5, true,
			function()
				self.score = self.score + 1
				msg.post("/ScoreUI#ScoreUI", "update_score", { score = self.score })

				if self.score % 25 == 0 then
					print("Change Dim")
					msg.post("/city_background#ScrollingBackground", "change_dim")
				end
			end)
		end 
		self.is_game_started = true
		
		if self.blue_polarity then
			msg.post("#sprite", "play_animation", { id = hash("MEN 2")})
		else 
			msg.post("#sprite", "play_animation", { id = hash("MEN")})
		end
		self.blue_polarity = not self.blue_polarity
	end
end